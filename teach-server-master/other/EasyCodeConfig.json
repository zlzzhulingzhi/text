{"author":"makejava","version":"1.2.4","userSecure":"","currTypeMapperGroupName":"Default","currTemplateGroupName":"wang_an","currColumnConfigGroupName":"Default","currGlobalConfigGroupName":"Default","typeMapper":{},"template":{"wang_an":{"name":"wang_an","elementList":[{"name":"entity.java.vm","code":"##定义初始变量\n#set($tableName = $tableInfo.name)\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/entity\"))\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}entity;\n\n##自动导入包（全局变量）\n$!autoImport\nimport com.baomidou.mybatisplus.extension.activerecord.Model;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\nimport java.time.LocalDateTime;\n\n/**\n * @author $!author\n * @since $!time.currTime()\n */\n##表注释（宏定义）\n@Data\n@EqualsAndHashCode(callSuper = true)\npublic class $!{tableInfo.name} extends Model {\n\n    private static final long serialVersionUID = $!tool.serial();\n\n#foreach($column in $tableInfo.fullColumn)\n\n#if(${column.name})\n    @ApiModelProperty(value = \"$!column.comment\")\n#end\n#if($column.name.equals(\"createTime\"))\n    @TableField(fill = FieldFill.INSERT)\n#end\n#if($column.name.equals(\"updateTime\"))\n    @TableField(fill = FieldFill.UPDATE)\n#end\n#if($column.name.equals(\"createBy\"))\n    @TableField(fill = FieldFill.INSERT)\n#end\n#if($column.name.equals(\"updateBy\"))\n    @TableField(fill = FieldFill.UPDATE)\n#end\n##配置时间字段\n#if($column.type.equals(\"java.time.LocalDateTime\") || $column.type.equals(\"java.util.Date\"))\n    @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone = \"GMT+8\")\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n\n## 因为使用了lombok,所以去掉get和set方法的生成\n###foreach($column in $tableInfo.fullColumn)\n####使用宏定义实现get,set方法\n###getSetMethod($column)\n###end\n}"},{"name":"dao.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Mapper\")\n\n##保存文件（宏定义）\n#save(\"/mapper\", \"Mapper.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"mapper\")\n\nimport java.util.List;\n\nimport java.io.Serializable;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport org.apache.ibatis.annotations.Param;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport $!{tableInfo.savePackageName}.entity.$!tableInfo.name;\nimport $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name.toLowerCase()}.${tableInfo.name}DetailResponse;\nimport $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name.toLowerCase()}.${tableInfo.name}PageRequest;\nimport $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name.toLowerCase()}.${tableInfo.name}PageResponse;\n\n##表注释（宏定义）\n#tableComment(\"表数据库访问层\")\npublic interface $!{tableName} extends BaseMapper<$!tableInfo.name> {\n\n    /**\n    * 批量新增数据（MyBatis原生foreach方法）\n    *\n    * @param entities List<$!{tableInfo.name}> 实例对象列表\n    * @return 影响行数\n    */\n    int insertBatch(@Param(\"entities\") List<$!{tableInfo.name}> entities);\n    \n    /**\n    * 批量新增或按主键更新数据（MyBatis原生foreach方法）\n    *\n    * @param entities List<$!{tableInfo.name}> 实例对象列表\n    * @return 影响行数\n    * @throws org.springframework.jdbc.BadSqlGrammarException 入参是空List的时候会抛SQL语句错误的异常，请自行校验入参\n    */\n    int insertOrUpdateBatch(@Param(\"entities\") List<$!{tableInfo.name}> entities);\n\n    IPage<$!{tableInfo.name}PageResponse> page(@Param(\"page\") IPage<?> page, @Param(\"params\") $!{tableInfo.name}PageRequest params);\n\n    $!{tableInfo.name}DetailResponse selectDetailById(Serializable id);\n    \n}\n"},{"name":"mapper.xml.vm","code":"##引入mybatis支持\n$!{mybatisSupport.vm}\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Mapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper\">\n\n    <resultMap type=\"$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}\" id=\"$!{tableInfo.name}Map\">\n#foreach($column in $tableInfo.fullColumn)\n        <result property=\"$!column.name\" column=\"$!column.obj.name\" jdbcType=\"$!column.ext.jdbcType\"/>\n#end\n    </resultMap>\n\n    <!-- 批量插入 -->\n    <insert id=\"insertBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n        (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)\n        </foreach>\n    </insert>\n    \n    <!-- 批量插入或按主键更新 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)\n        </foreach>\n        on duplicate key update\n        #foreach($column in $tableInfo.otherColumn)$!column.obj.name = values($!column.obj.name) #if($velocityHasNext), #end#end\n    ##使其正常换行\n    $empty\n    </insert>\n\n    <select id=\"page\" resultType=\"$!{tableInfo.savePackageName}.pojo.${tableInfo.name.toLowerCase()}.$!{tableInfo.name}PageResponse\">\n        select *\n        from $!{tableInfo.obj.name}\n        <where>\n            <!-- 示例代码，自行修改 -->\n            <!--\n            <if test=\"params.name != null and params.name != '' \">\n                and name like concat('%', #{params.name}, '%')\n            </if>\n            -->\n        </where>\n    </select>\n\n    <select id=\"selectDetailById\" resultType=\"$!{tableInfo.savePackageName}.pojo.${tableInfo.name.toLowerCase()}.$!{tableInfo.name}DetailResponse\">\n        select *\n        from $!{tableInfo.obj.name}\n        where id = #{id}\n    </select>\n</mapper>\n"},{"name":"service.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Service\")\n\n##保存文件（宏定义）\n#save(\"/service\", \"Service.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service\")\n\nimport $!{tableInfo.savePackageName}.entity.$!tableInfo.name;\nimport $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name.toLowerCase()}.*;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.service.IService;\n\nimport java.io.Serializable;\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表服务接口\")\npublic interface $!{tableName} extends IService<$!tableInfo.name> {\n\n    /**\n     * 新增$!tableInfo.comment\n     * @param params\n     * @return\n     */\n    boolean add($!{tableInfo.name}AddRequest params);\n\n    /**\n     * 分页查询$!tableInfo.comment\n     * @param params\n     * @return\n     */\n    IPage<$!{tableInfo.name}PageResponse> page($!{tableInfo.name}PageRequest params);\n\n    /**\n     * 获取详细信息\n     * @param id\n     * @return\n     */\n    $!{tableInfo.name}DetailResponse detail(Serializable id);\n\n    /**\n     * 更新$!tableInfo.comment\n     * @param params\n     * @return\n     */\n    boolean update($!{tableInfo.name}UpdateRequest params);\n\n    /**\n     * 删除$!tableInfo.comment\n     * @param idList\n     * @return\n     */\n    boolean deleteByIds(List<Long> idList);\n    \n}\n"},{"name":"serviceImpl.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"ServiceImpl\")\n\n##保存文件（宏定义）\n#save(\"/service/impl\", \"ServiceImpl.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service.impl\")\n\nimport cn.qbs.wa.teach.common.core.exception.IllegalParamsException;\nimport $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name.toLowerCase()}.*;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.BeanUtils;\nimport org.springframework.stereotype.Service;\n\nimport java.io.Serializable;\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表服务实现类\")\n@Slf4j\n@Service(\"$!tool.firstLowerCase($tableInfo.name)Service\")\npublic class $!{tableName} extends ServiceImpl<$!{tableInfo.name}Mapper, $!{tableInfo.name}> implements $!{tableInfo.name}Service {\n\n    @Override\n    public boolean add($!{tableInfo.name}AddRequest params) {\n        $!{tableInfo.name} $!tool.firstLowerCase($!tableInfo.name) = new $!{tableInfo.name}();\n        BeanUtils.copyProperties(params, $!tool.firstLowerCase($!tableInfo.name));\n        return this.save($!tool.firstLowerCase($!tableInfo.name));\n    }\n\n    @Override\n    public IPage<$!{tableInfo.name}PageResponse> page($!{tableInfo.name}PageRequest params) {\n        return baseMapper.page(params.createMpPage(), params);\n    }\n\n    @Override\n    public $!{tableInfo.name}DetailResponse detail(Serializable id) {\n        return baseMapper.selectDetailById(id);\n    }\n\n    @Override\n    public boolean update($!{tableInfo.name}UpdateRequest params) {\n        if (params.getId() == null) {\n            throw new IllegalParamsException(\"ID不能为空！\");\n        }\n        $!{tableInfo.name} $!tool.firstLowerCase($!tableInfo.name) = new $!{tableInfo.name}();\n        BeanUtils.copyProperties(params, $!tool.firstLowerCase($!tableInfo.name));\n        return this.updateById($!tool.firstLowerCase($!tableInfo.name));\n    }\n\n    @Override\n    public boolean deleteByIds(List<Long> idList) {\n        return this.removeByIds(idList);\n    }\n    \n}\n"},{"name":"controller.java.vm","code":"##导入宏定义\n$!{define.vm}\n##设置表后缀（宏定义）\n#setTableSuffix(\"Controller\")\n##保存文件（宏定义）\n#save(\"/controller\", \"Controller.java\")\n##包路径（宏定义）\n#setPackageSuffix(\"controller\")\n##定义服务名\n#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), \"Service\"))\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\n\nimport cn.qbs.wa.teach.common.core.domain.R;\n\nimport $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name.toLowerCase()}.*;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport org.springframework.validation.annotation.Validated;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.annotation.Resource;\nimport java.util.List;\nimport cn.qbs.wa.teach.common.core.domain.IdListRequest;\nimport cn.qbs.wa.teach.common.core.domain.IdRequest;\n\n\n\n##表注释（宏定义）\n#tableComment(\"表控制层\")\n@RestController\n@RequestMapping(\"$!tool.firstLowerCase($!tableInfo.name)\")\npublic class $!{tableName} {\n\n    /**\n     * 服务对象\n     */\n    @Resource\n    private $!{tableInfo.name}Service $!{serviceName};\n\n\n    /**\n     * 新增$!tableInfo.comment\n     *\n     * @param params\n     * @return \n     */\n    @PostMapping(\"add\")\n    //@RequiresPermissions(\"$!tool.firstLowerCase($!tableInfo.name):add\")\n    //@Log(title = \"新增$!tableInfo.comment\", businessType = BusinessType.INSERT)\n    public R<Boolean> add(@RequestBody @Validated $!{tableInfo.name}AddRequest params) {\n        return R.ok(this.$!{serviceName}.add(params));\n    }\n    \n    /**\n     * 分页查询$!tableInfo.comment\n     *\n     * @param params\n     * @return \n     */\n    @PostMapping(\"page\")\n    //@RequiresPermissions(\"$!tool.firstLowerCase($!tableInfo.name):page\")\n    //@Log(title = \"分页查询$!tableInfo.comment\", businessType = BusinessType.OTHER)\n    public R<IPage<$!{tableInfo.name}PageResponse>> page(@RequestBody $!{tableInfo.name}PageRequest params) {\n        return R.ok(this.$!{serviceName}.page(params));\n    }\n\n    /**\n     * 查询$!tableInfo.comment详情\n     *\n     * @param id 主键\n     * @return \n     */\n    @PostMapping(\"detail\")\n    //@RequiresPermissions(\"$!tool.firstLowerCase($!tableInfo.name):details\")\n    //@Log(title = \"$!tableInfo.comment详情\", businessType = BusinessType.OTHER)\n    public R<$!{tableInfo.name}DetailResponse> detail(@RequestBody IdRequest request) {\n        return R.ok(this.$!{serviceName}.detail(request.getId()));\n    }\n\n    /**\n     * 修改$!tableInfo.comment\n     *\n     * @param params \n     * @return \n     */\n    @PostMapping(\"update\")\n    //@RequiresPermissions(\"$!tool.firstLowerCase($!tableInfo.name):update\")\n    //@Log(title = \"更新$!tableInfo.comment\", businessType = BusinessType.UPDATE)\n    public R<Boolean> update(@RequestBody @Validated $!{tableInfo.name}UpdateRequest params) {\n        return R.ok(this.$!{serviceName}.update(params));\n    }\n\n    /**\n     * 删除$!tableInfo.comment\n     *\n     * @param idList 主键集合\n     * @return \n     */\n    @PostMapping(\"delete\")\n    //@RequiresPermissions(\"$!tool.firstLowerCase($!tableInfo.name):delete\")\n    //@Log(title = \"删除$!tableInfo.comment\", businessType = BusinessType.DELETE)\n    public R<Boolean> delete(@RequestBody IdListRequest request) {\n        return R.ok(this.$!{serviceName}.deleteByIds(request.getIdList()));\n    }\n    \n}\n"},{"name":"pageRequest.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"PageRequest\")\n\n##保存文件（宏定义）\n#save(\"/pojo/$!tableInfo.name.toLowerCase()\", \"PageRequest.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"pojo.$!tableInfo.name.toLowerCase()\")\n\n##自动导入包（全局变量）\n$!autoImport\nimport lombok.Data;\nimport io.swagger.annotations.ApiModelProperty;\nimport cn.qbs.wa.teach.domain.BasePageRequest;\n\n##表注释（宏定义）\n#tableComment(\"分页查询参数\")\n@Data\npublic class $!{tableName} extends BasePageRequest {\n#foreach($column in $tableInfo.fullColumn)\n#if(!$column.name.equals(\"id\") && !$column.name.equals(\"createBy\")\n    && !$column.name.equals(\"createTime\") && !$column.name.equals(\"updateBy\")\n    && !$column.name.equals(\"updateTime\"))\n    \n    @ApiModelProperty(value = \"$!column.comment\")\n    ##配置时间字段\n#if($column.type.equals(\"java.time.LocalDateTime\") || $column.type.equals(\"java.util.Date\"))\n    @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone = \"GMT+8\")\n#end\nprivate $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n#end\n\n}\n"},{"name":"addRequest.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"AddRequest\")\n\n##保存文件（宏定义）\n#save(\"/pojo/$!tableInfo.name.toLowerCase()\", \"AddRequest.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"pojo.$!tableInfo.name.toLowerCase()\")\n\n##自动导入包（全局变量）\n$!autoImport\nimport lombok.Data;\nimport io.swagger.annotations.ApiModelProperty;\n\n##表注释（宏定义）\n#tableComment(\"创建$!tableInfo.comment参数\")\n@Data\npublic class $!{tableName} {\n#foreach($column in $tableInfo.fullColumn)\n#if(!$column.name.equals(\"id\") && !$column.name.equals(\"createBy\")\n    && !$column.name.equals(\"createTime\") && !$column.name.equals(\"updateBy\")\n    && !$column.name.equals(\"updateTime\"))\n    \n    @ApiModelProperty(value = \"$!column.comment\")\n    ##配置时间字段\n#if($column.type.equals(\"java.time.LocalDateTime\") || $column.type.equals(\"java.util.Date\"))\n    @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone = \"GMT+8\")\n#end\nprivate $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n#end\n\n}\n"},{"name":"updateRequest.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"UpdateRequest\")\n\n##保存文件（宏定义）\n#save(\"/pojo/$!tableInfo.name.toLowerCase()\", \"UpdateRequest.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"pojo.$!tableInfo.name.toLowerCase()\")\n\n##自动导入包（全局变量）\n$!autoImport\nimport lombok.Data;\nimport io.swagger.annotations.ApiModelProperty;\n\n##表注释（宏定义）\n#tableComment(\"更新$!tableInfo.comment参数\")\n@Data\npublic class $!{tableName} {\n#foreach($column in $tableInfo.fullColumn)\n#if(!$column.name.equals(\"createBy\") && !$column.name.equals(\"createTime\") \n    && !$column.name.equals(\"updateBy\") && !$column.name.equals(\"updateTime\"))\n    \n    @ApiModelProperty(value = \"$!column.comment\")\n    ##配置时间字段\n#if($column.type.equals(\"java.time.LocalDateTime\") || $column.type.equals(\"java.util.Date\"))\n    @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone = \"GMT+8\")\n#end\nprivate $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n#end\n\n}\n"},{"name":"pageResponse.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"PageResponse\")\n\n##保存文件（宏定义）\n#save(\"/pojo/$!tableInfo.name.toLowerCase()\", \"PageResponse.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"pojo.$!tableInfo.name.toLowerCase()\")\n\nimport lombok.Data;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\n\n##表注释（宏定义）\n#tableComment(\"分页查询$!tableInfo.comment响应\")\n@Data\npublic class $!{tableName} extends $!{tableInfo.name} {\n\n}\n"},{"name":"detailResponse.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"DetailResponse\")\n\n##保存文件（宏定义）\n#save(\"/pojo/$!tableInfo.name.toLowerCase()\", \"DetailResponse.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"pojo.$!tableInfo.name.toLowerCase()\")\n\nimport lombok.Data;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\n\n##表注释（宏定义）\n#tableComment(\"$!tableInfo.comment详情\")\n@Data\npublic class $!{tableName} extends $!{tableInfo.name} {\n\n}\n"}]}},"columnConfig":{},"globalConfig":{}}
