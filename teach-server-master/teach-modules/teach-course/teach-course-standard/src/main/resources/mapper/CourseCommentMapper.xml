<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qbs.wa.teach.course.standard.mapper.CourseCommentMapper">

    <resultMap type="cn.qbs.wa.teach.course.common.entity.CourseComment" id="CourseCommentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="orgId" column="org_id" jdbcType="INTEGER"/>
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="score" column="score" jdbcType="VARCHAR"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="userNickName" column="user_nick_name" jdbcType="VARCHAR"/>
        <result property="userHeadImgUrl" column="user_head_img_url" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into course_comment(org_id, course_id, content, score, deleted, create_by, create_time, update_by, update_time, user_nick_name, user_head_img_url)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.orgId}, #{entity.courseId}, #{entity.content}, #{entity.score}, #{entity.deleted}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.userNickName}, #{entity.userHeadImgUrl})
        </foreach>
    </insert>

    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into course_comment(org_id, course_id, content, score, deleted, create_by, create_time, update_by, update_time, user_nick_name, user_head_img_url)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orgId}, #{entity.courseId}, #{entity.content}, #{entity.score}, #{entity.deleted}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.userNickName}, #{entity.userHeadImgUrl})
        </foreach>
        on duplicate key update
        org_id = values(org_id) , course_id = values(course_id) , content = values(content) , score = values(score) , deleted = values(deleted) , create_by = values(create_by) , create_time = values(create_time) , update_by = values(update_by) , update_time = values(update_time) , user_nick_name = values(user_nick_name) , user_head_img_url = values(user_head_img_url)         $empty
    </insert>

    <select id="page" resultType="cn.qbs.wa.teach.course.standard.pojo.coursecomment.CourseCommentPageResponse">
        select *
        from course_comment
        <where>
            deleted = 0
            <if test="params.courseId != null">
                and course_id = #{params.courseId}
            </if>
        </where>
        order by id desc
    </select>

    <select id="selectDetailById" resultType="cn.qbs.wa.teach.course.standard.pojo.coursecomment.CourseCommentDetailResponse">
        select *
        from course_comment
        where id = #{id}
    </select>
</mapper>

