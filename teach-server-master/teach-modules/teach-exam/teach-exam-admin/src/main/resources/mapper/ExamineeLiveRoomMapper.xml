<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qbs.wa.teach.exam.admin.mapper.ExamineeLiveRoomMapper">

    <resultMap type="cn.qbs.wa.teach.exam.common.entity.ExamineeLiveRoom" id="ExamineeLiveRoomMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="orgId" column="org_id" jdbcType="INTEGER"/>
        <result property="roomId" column="room_id" jdbcType="INTEGER"/>
        <result property="examId" column="exam_id" jdbcType="INTEGER"/>
        <result property="examineeId" column="examinee_id" jdbcType="INTEGER"/>
        <result property="examineeRecordId" column="examinee_record_id" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="streamName" column="stream_name" jdbcType="VARCHAR"/>
        <result property="pushRtmpUrl" column="push_rtmp_url" jdbcType="VARCHAR"/>
        <result property="pushWebrtcUrl" column="push_webrtc_url" jdbcType="VARCHAR"/>
        <result property="pullUdpUrl" column="pull_udp_url" jdbcType="VARCHAR"/>
        <result property="pullM3u8Url" column="pull_m3u8_url" jdbcType="VARCHAR"/>
        <result property="pullFlvUrl" column="pull_flv_url" jdbcType="VARCHAR"/>
        <result property="pullRtmpUrl" column="pull_rtmp_url" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into examinee_live_room(org_id, room_id, exam_id, examinee_id, examinee_record_id, remark, stream_name, push_rtmp_url, push_webrtc_url, pull_udp_url, pull_m3u8_url, pull_flv_url, pull_rtmp_url, create_by, create_time, update_by, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.orgId}, #{entity.roomId}, #{entity.examId}, #{entity.examineeId}, #{entity.examineeRecordId}, #{entity.remark}, #{entity.streamName}, #{entity.pushRtmpUrl}, #{entity.pushWebrtcUrl}, #{entity.pullUdpUrl}, #{entity.pullM3u8Url}, #{entity.pullFlvUrl}, #{entity.pullRtmpUrl}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime})
        </foreach>
    </insert>
    
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into examinee_live_room(org_id, room_id, exam_id, examinee_id, examinee_record_id, remark, stream_name, push_rtmp_url, push_webrtc_url, pull_udp_url, pull_m3u8_url, pull_flv_url, pull_rtmp_url, create_by, create_time, update_by, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orgId}, #{entity.roomId}, #{entity.examId}, #{entity.examineeId}, #{entity.examineeRecordId}, #{entity.remark}, #{entity.streamName}, #{entity.pushRtmpUrl}, #{entity.pushWebrtcUrl}, #{entity.pullUdpUrl}, #{entity.pullM3u8Url}, #{entity.pullFlvUrl}, #{entity.pullRtmpUrl}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        org_id = values(org_id) , room_id = values(room_id) , exam_id = values(exam_id) , examinee_id = values(examinee_id) , examinee_record_id = values(examinee_record_id) , remark = values(remark) , stream_name = values(stream_name) , push_rtmp_url = values(push_rtmp_url) , push_webrtc_url = values(push_webrtc_url) , pull_udp_url = values(pull_udp_url) , pull_m3u8_url = values(pull_m3u8_url) , pull_flv_url = values(pull_flv_url) , pull_rtmp_url = values(pull_rtmp_url) , create_by = values(create_by) , create_time = values(create_time) , update_by = values(update_by) , update_time = values(update_time)         $empty
    </insert>

    <select id="page" resultType="cn.qbs.wa.teach.exam.admin.pojo.examineeliveroom.ExamineeLiveRoomPageResponse">
        SELECT ex.user_id AS userId,el.* FROM examinee_live_room el LEFT JOIN examinee ex ON el.examinee_id = ex.id
        LEFT JOIN examinee_record er ON el.examinee_record_id = er.id WHERE er.`status` =0 AND el.exam_id = #{examId}
    </select>

    <select id="selectDetailById" resultType="cn.qbs.wa.teach.exam.admin.pojo.examineeliveroom.ExamineeLiveRoomDetailResponse">
        select *
        from examinee_live_room
        where id = #{id}
    </select>

    <select id="selectDetailList" resultType="cn.qbs.wa.teach.exam.admin.pojo.examineeliveroom.ExamineeLiveRoomPageResponse">
        SELECT ex.user_id AS userId, el.stream_name FROM examinee_live_room el LEFT JOIN examinee ex ON el.examinee_id = ex.id
        LEFT JOIN examinee_record er ON el.examinee_record_id = er.id WHERE  el.exam_id = #{examId}
    </select>
</mapper>

