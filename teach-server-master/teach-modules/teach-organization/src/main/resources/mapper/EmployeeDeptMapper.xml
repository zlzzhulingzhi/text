<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qbs.wa.teach.organization.mapper.EmployeeDeptMapper">

    <resultMap type="cn.qbs.wa.teach.organization.entity.EmployeeDept" id="EmployeeDeptMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="employeeId" column="employee_id" jdbcType="INTEGER"/>
        <result property="deptId" column="dept_id" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into wa_teach_organization.employee_dept(employee_id, dept_id, create_by, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.employeeId}, #{entity.deptId}, #{entity.createBy}, #{entity.createTime})
        </foreach>
    </insert>

    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into wa_teach_organization.employee_dept(employee_id, dept_id, create_by, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.employeeId}, #{entity.deptId}, #{entity.createBy}, #{entity.createTime})
        </foreach>
        on duplicate key update
        employee_id = values(employee_id) , dept_id = values(dept_id) , create_by = values(create_by) , create_time = values(create_time)         $empty
    </insert>

    <select id="page" resultType="cn.qbs.wa.teach.organization.pojo.employeedept.EmployeeDeptPageResponse">
        select *
        from employee_dept
        <where>
            <!-- 示例代码，自行修改 -->
            <!--
            <if test="params.name != null and params.name != '' ">
                and name like concat('%', #{params.name}, '%')
            </if>
            -->
        </where>
    </select>

    <select id="selectDetailById" resultType="cn.qbs.wa.teach.organization.pojo.employeedept.EmployeeDeptDetailResponse">
        select *
        from employee_dept
        where id = #{id}
    </select>
    <select id="listIdByEmployeeId" resultType="java.lang.Long">
        SELECT
            d.id
        FROM
            employee_dept ed
                INNER JOIN dept d ON d.id = ed.dept_id
        WHERE
            ed.employee_id=#{id}

    </select>


    <select id="list" resultMap="deptEmployeeListResultMap">
       SELECT
            d.id,
            d.org_id,
            d.parent_id,
            d.dept_name,
            d.full_name,
            IFNULL(d.sort, 1) sort,
            e.id as employee_id,
            e.user_id,
            e.phone,
            e.real_name
        FROM
            dept d
            LEFT JOIN employee_dept ed ON ed.dept_id = d.id
            LEFT JOIN employee e ON e.id = ed.employee_id AND e.enabled = 1
        WHERE
	        d.org_id = #{params.orgId} AND d.enabled = 1
    </select>

    <resultMap id="deptEmployeeListResultMap" type="cn.qbs.wa.teach.organization.pojo.employeedept.EmployeeDeptTreeListResponse">
        <id column="id" property="id" />
        <result column="org_id" property="orgId" />
        <result column="parent_id" property="parentId" />
        <result column="dept_name" property="deptName" />
        <result column="full_name" property="fullName" />
        <result column="sort" property="sort" />
        <collection property="employees" ofType="cn.qbs.wa.teach.organization.entity.Employee">
            <id column="employee_id" property="id" />
            <id column="user_id" property="userId" />
            <result column="phone" property="phone" />
            <result column="real_name" property="realName" />
        </collection>
    </resultMap>
</mapper>

